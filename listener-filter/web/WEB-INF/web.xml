<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--filter配置一般写在其它servlet最前面
        1. filter配置和servlet非常相似，filter也是被tomcat管理和维护
        2. url-pattern：就是当请求的url匹配的时候，就会调用filter
        3. /manage/* ：其中第一个 / 解析为 http://ip:port/工程路径/
        4. 完整路径就是 http://ip:port/工程路径/manage/*
            当请求的资源url满足该条件时，都会调用filter
    -->
    <filter>
        <filter-name>ManageFilter</filter-name>
        <filter-class>com.charlie.filter.ManageFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ManageFilter</filter-name>
        <url-pattern>/manage/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>HspFilterConfig</filter-name>
        <filter-class>com.charlie.filter.HspFilterConfig</filter-class>
        <!--根据业务逻辑，配置该Filter自己的参数-->
        <init-param>
            <param-name>ip</param-name>
            <param-value>128.12</param-value>
        </init-param>
        <init-param>
            <param-name>port</param-name>
            <param-value>8848</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>HspFilterConfig</filter-name>
        <url-pattern>/abc/*</url-pattern>
    </filter-mapping>

    <!--配置Filter过滤链
        先配置的AFilter，后配置的BFilter
        则过滤器的过滤顺序为 -> AFilter -> BFilter
    -->
    <filter>
        <filter-name>AFilter</filter-name>
        <filter-class>com.charlie.filter.AFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>AFilter</filter-name>
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>BFilter</filter-name>
        <filter-class>com.charlie.filter.BFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>BFilter</filter-name>
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>
    <!--电影评论过滤器-->
    <filter>
        <filter-name>TopicFilter</filter-name>
        <filter-class>com.charlie.filter.ToPicFilter</filter-class>
        <init-param>
            <param-name>keyword</param-name>
            <param-value>苹果,香蕉</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>TopicFilter</filter-name>
        <url-pattern>/comment/*</url-pattern>
    </filter-mapping>

    <!--配置监听器-->
    <!--<listener>-->
    <!--    <listener-class>com.charlie.listener.HspServletContextListener</listener-class>-->
    <!--</listener>-->
    <!--<listener>-->
    <!--    <listener-class>com.charlie.listener.HspServletContextAttributeListener</listener-class>-->
    <!--</listener>-->
    <!--<listener>-->
    <!--    <listener-class>com.charlie.listener.HspHttpSessionListener</listener-class>-->
    <!--</listener>-->
    <!--<listener>-->
    <!--    <listener-class>com.charlie.listener.HspHttpSessionAttributeListener</listener-class>-->
    <!--</listener>-->
    <!--<listener>-->
    <!--    <listener-class>com.charlie.listener.HspRequestListener</listener-class>-->
    <!--</listener>-->
    
    
    <!--配置servlet-->
    <servlet>
        <servlet-name>HiServlet</servlet-name>
        <servlet-class>com.charlie.servlet.HiServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>HiServlet</servlet-name>
        <url-pattern>/hi</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>LoginCheckServlet</servlet-name>
        <servlet-class>com.charlie.servlet.LoginCheckServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LoginCheckServlet</servlet-name>
        <url-pattern>/loginCheck</url-pattern>
    </servlet-mapping>
</web-app>